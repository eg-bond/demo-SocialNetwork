{"version":3,"sources":["Content/Dialogs/Dialogs.module.css","Content/Dialogs/DialogItem/DialogItem.jsx","Content/Dialogs/Message/Message.jsx","Content/Dialogs/SendMessage/SendMessage.jsx","Content/Dialogs/Dialogs.jsx","Content/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","user","active","to","name","Message","message","maxLength50","maxLengthCreator","SendMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","SendMessage","formData","sendMessage","messageText","Dialogs","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","compose","connect","state","dialogsPage","newMessageText","updateNewMessage","withAuthRedirect"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,KAAO,sBAAsB,SAAW,0BAA0B,QAAU,2B,qFCUhMC,EAPI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,yBAAKC,UAAS,UAAKC,IAAEC,KAAP,YAAeD,IAAEE,SAClC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCEnBC,EANC,SAACT,GAEb,OAAO,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,kCCAvCC,EAAcC,YAAiB,IAa/BC,EAAuBC,YAAU,CACnCC,KAAM,YADmBD,EAXL,SAACd,GACrB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,kBAACC,EAAA,EAAD,CAAOV,KAAM,cAAeW,UAAWC,IAAUC,SAAU,CAACC,IAAeX,KAC3E,6BACI,oDAmBDY,MARf,SAAqBvB,GAKjB,OAAQ,kBAACa,EAAD,CAAsBG,SAJb,SAACQ,GACdxB,EAAMyB,YAAYD,EAASE,iBCMpBC,MAvBf,SAAiB3B,GAEb,IAAI4B,EAAkB5B,EAAM6B,QAAQC,KAAM,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMN,GAAI6B,EAAE7B,GAAI8B,IAAKD,EAAE7B,QACtF+B,EAAmBjC,EAAMkC,SAASJ,KAAM,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAASR,GAAIiC,EAAEjC,GAAI8B,IAAKG,EAAEjC,QAE/F,OACI,yBAAKC,UAAWC,IAAEyB,SACd,yBAAK1B,UAAWC,IAAEgC,cACd,6BAAMR,IAEV,yBAAKzB,UAAWC,IAAE8B,UACd,6BAAMD,GACN,kBAAC,EAAD,CAAaR,YAAazB,EAAMyB,iB,iCCJjCY,sBACXC,aATkB,SAACC,GACnB,MAAO,CACHV,QAASU,EAAMC,YAAYX,QAC3BK,SAAUK,EAAMC,YAAYN,SAC5BO,eAAgBF,EAAMC,YAAYC,kBAKb,CAAChB,gBAAaiB,uBACvCC,IAFWN,CAGbV","file":"static/js/4.36764e05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2NdJ-\",\"dialogsItems\":\"Dialogs_dialogsItems__J8jQK\",\"active\":\"Dialogs_active__1Db4f\",\"user\":\"Dialogs_user__2UGI8\",\"messages\":\"Dialogs_messages__pZKkr\",\"message\":\"Dialogs_message__1bZ2D\"};","import React from  'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return <div className={`${s.user} ${s.active}`}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from  'react';\r\nimport s from \"../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n\r\n    return <div className={s.message}>{props.message}</div>\r\n\r\n}\r\n\r\nexport default Message;","import React from  'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../Templates/formControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst SendMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={\"messageText\"} component={Textarea} validate={[requiredField, maxLength50]}/>\r\n            <div>\r\n                <button>SendMessage</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst SendMessageReduxForm = reduxForm({\r\n    form: 'messages'\r\n})(SendMessageForm);\r\n\r\n\r\nfunction SendMessage(props) {\r\n    const onSubmit = (formData) => {\r\n        props.sendMessage(formData.messageText);\r\n    }\r\n\r\n    return (<SendMessageReduxForm onSubmit={onSubmit}/>);\r\n}\r\n\r\nexport default SendMessage;","import React from  'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport SendMessage from \"./SendMessage/SendMessage\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nfunction Dialogs(props) {\r\n\r\n    let dialogsElements = props.dialogs.map ( d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n    let messagesElements = props.messages.map ( m => <Message message={m.message} id={m.id} key={m.id}/>);\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                <div>{dialogsElements}</div>\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <SendMessage sendMessage={props.sendMessage}/>\r\n                {/*<SendMessage messages={props.messages}*/}\r\n                             {/*newMessageText={props.newMessageText}*/}\r\n                             {/*sendMessage={props.sendMessage}*/}\r\n                             {/*onMessageChange={props.updateNewMessage} />*/}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from  'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {sendMessage, updateNewMessage} from \"../../Redux/dialogsReduser\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage, updateNewMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}