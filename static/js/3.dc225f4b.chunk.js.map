{"version":3,"sources":["Content/Profile/ProfileInfo/ProfileInfo.module.css","Content/Profile/MyPosts/Post/Post.module.css","Content/Profile/MyPosts/MyPosts.module.css","Content/Profile/ProfileInfo/ProfileStatus.jsx","Content/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Content/Profile/ProfileInfo/ProfileInfo.jsx","Content/Profile/MyPosts/Post/Post.jsx","Content/Profile/MyPosts/MyPosts.jsx","Content/Profile/Profile.jsx","Content/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","s","src","photos","large","fullName","Preloader","Post","item","message","likeCount","maxLength10","maxLengthCreator","PostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","requiredField","placeholder","postButtons","MyPosts","memo","console","log","postsElements","posts","map","p","myPosts","formData","addPost","postText","Profile","updateNewPostText","newPostText","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","showProfile","getStatus","mapDispatchToPropsObject","compose","connect","state","profilePage","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.dc225f4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__eYHyl\",\"profile\":\"ProfileInfo_profile__rL63L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1YKY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3rltl\",\"postButtons\":\"MyPosts_postButtons__iM9b8\"};","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component{\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState ( {\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState ( {\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // debugger;\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { !this.state.editMode &&\r\n                    <div >\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n                    </div>\r\n                }\r\n                { this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}></input>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n        // let stateWithSetState = useState(true);\r\n        // let editMode = stateWithSetState[0];\r\n        // let setEditMode = stateWithSetState[1];\r\n\r\n        let [editMode, setEditMode] = useState(false);\r\n        let [status, setStatus] = useState(props.status);\r\n\r\n        useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n        const activateEditMode = () => {\r\n            setEditMode(true);\r\n        }\r\n\r\n        const deactivateEditMode = () => {\r\n            setEditMode(false);\r\n            props.updateStatus(status);\r\n        }\r\n\r\n        const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div >\r\n                        <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n                    </div>\r\n                }\r\n                { editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}></input>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../Templates/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nfunction ProfileInfo(props) {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (         \r\n        <div >\r\n            {/*<div className={s.img}>*/}\r\n                {/*<img className={s.img} src='https://atlantis.nyc3.digitaloceanspaces.com/styled/8f4597e8d337d22501cede98b6b0ecb4'></img>*/}\r\n            {/*</div>*/}\r\n            <div className={s.profile}>\r\n                <img src={props.profile.photos.large} />\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <div>\r\n                    <span>Имя пользователя: </span>\r\n                    {props.profile.fullName}\r\n                </div>\r\n            </div>\r\n        </div>         \r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n    return (         \r\n        <div className={s.item}>\r\n            <img src='https://1.bp.blogspot.com/-ug1OQUVf5VU/V9hSWiYHnHI/AAAAAAAABvs/rat9oeCgzs48WUmN6Jdr9P5T7rLt1AaBACLcB/s1600/asimmetrichnoye-litso-3.jpeg'></img>\r\n            <span>{props.message}</span>\r\n            <div>like {props.likeCount}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../Templates/formControls/FormControls\";\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst PostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"postText\"} validate={[requiredField, maxLength10]} placeholder={'post message'}></Field>\r\n            </div>\r\n            <div className={s.postButtons}>\r\n                <button>Add post</button>\r\n                <button>Remove post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostsReduxForm = reduxForm({\r\n    form: 'posts'\r\n})(PostsForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    console.log(\"render\");\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likeCount={p.likeCount}/>)\r\n\r\n    const onAddPost = (formData) => {\r\n        props.addPost(formData.postText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h3>My posts</h3>\r\n            <PostsReduxForm onSubmit={onAddPost}/>\r\n            {postsElements}\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport {updateNewPost} from \"../../Redux/profileReduser\";\r\nimport Preloader from \"../../Templates/Preloader/Preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPosts posts={props.posts}\r\n                     addPost={props.addPost}\r\n                     updateNewPostText={props.updateNewPostText}\r\n                     newPostText={props.newPostText}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {addPost, updateNewPostText, showProfile, getStatus, updateStatus} from \"../../Redux/profileReduser\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {API} from \"../../api/api\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        this.props.showProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        // if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n        return (\r\n            <Profile {...this.props} />\r\n        )\r\n\r\n    }\r\n}\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n// // let mapStateToPropsForRedirect = (state) => ({\r\n// //     isAuth: state.auth.isAuth\r\n// // });\r\n//\r\n// AuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\r\n\r\n\r\n// let withUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n\r\nlet mapDispatchToPropsObject = {addPost, updateNewPostText, showProfile, getStatus, updateStatus }\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n// export default connect(mapStateToProps, mapDispatchToPropsObject)(withUrlDataContainerComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToPropsObject),\r\n    withRouter\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}